% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-text-glyphs.R
\name{cr_text_glyph}
\alias{cr_text_glyph}
\title{Draw glyphs}
\usage{
cr_text_glyph(
  cr,
  idx,
  x,
  y,
  family = "sans-serif",
  size = 100,
  fill = "black",
  color = NA,
  weight = "normal",
  slant = "normal"
)
}
\arguments{
\item{cr}{\code{cairo raster} object as created by \code{\link{cr_new}()}}

\item{idx}{glyph indices in specified font}

\item{x, y}{text location}

\item{family}{font family name. Default: "sans-serif".
Use \code{systemfonts::system_fonts()$family} 
to see fonts available on the current system.  The following 
generic names are also guaranteed to work: "serif", "sans-serif", 
"cursive", "fantasy", "monospace"}

\item{size}{font size in pixels. default: 100}

\item{fill, color}{text color}

\item{weight}{"normal" (default) or "bold"}

\item{slant}{"normal" (default), "italic" or "oblique"}
}
\value{
Invisibly return the original \code{cairo raster} object
}
\description{
This is a low level function which needs some other package to determine 
actual glyph IDs and drawing locations. One example of a package which 
does this layout is \code{textshaping}.
}
\examples{
\dontshow{if (interactive() && requireNamespace('textshaping')) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# cairo_select_font_face() within Cairo using 'fontconfig' lib may 
# not be releasing memory automatically through the glyph interface.
ts <- textshaping::shape_text(
    "hello", family = "sans-serif", id = 1, size = 80, weight = 400
)
glyphs <- ts$shape 
img <- cr_new(200, 200)
cr_text_glyph(
   cr     = img, 
   idx    = glyphs$index, 
   x      = glyphs$x_offset + 10, 
   y      = glyphs$y_offset + 100, 
   family = 'sans-serif', 
   size   = 80, 
   weight = 'bold', 
   slant  = 'oblique'
)
plot(img, T)
\dontshow{\}) # examplesIf}
}
\seealso{
Other text functions: 
\code{\link{cr_text_basic}()}
}
\concept{text functions}
