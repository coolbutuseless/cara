% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-draw.R
\name{cr_spline}
\alias{cr_spline}
\title{Draw cubic bezier splines}
\usage{
cr_spline(
  cr,
  x1,
  y1,
  x2,
  y2,
  cx1,
  cy1,
  cx2,
  cy2,
  color = "black",
  params = NULL
)
}
\arguments{
\item{cr}{\code{cairo raster} object as created by \code{\link{cr_new}()}}

\item{x1, y1, x2, y2}{the endpoints of the bezier}

\item{cx1, cy1, cx2, cy2}{the coordinates of the control points}

\item{color}{line color. Default: 'black'}

\item{params}{graphical parameters created with \code{\link{cpar}()}. Default: NULL
means to use the currently defined global parameters}
}
\description{
Draw cubic bezier splines
}
\examples{
w <- 400
h <- 300
img <- cr_new(w, h)
N <- 3
colors <- rainbow(N)
x1 <- runif(N, 0, w); y1 <- runif(N, 0, h)
x2 <- runif(N, 0, w); y2 <- runif(N, 0, h)
cx1 <- runif(N, 0, w); cy1 <- runif(N, 0, h)
cx2 <- runif(N, 0, w); cy2 <- runif(N, 0, h)

cr_spline(img, x1, y1, x2, y2, cx1, cy1, cx2, cy2, color = colors)
plot(img, T)
}
\seealso{
Other draw functions: 
\code{\link{cr_arc}()},
\code{\link{cr_circle}()},
\code{\link{cr_line}()},
\code{\link{cr_point}()},
\code{\link{cr_polygon}()},
\code{\link{cr_polyline}()},
\code{\link{cr_rect}()}
}
\concept{draw functions}
