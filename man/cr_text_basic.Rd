% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cairo-text-basic.R
\name{cr_text_basic}
\alias{cr_text_basic}
\title{Draw text in a simple manner}
\usage{
cr_text_basic(
  cr,
  text,
  x,
  y,
  family = "sans-serif",
  size = 100,
  fill = "black",
  color = NA,
  weight = "normal",
  slant = "normal",
  hjust = 0,
  vjust = 0
)
}
\arguments{
\item{cr}{\code{cairo raster} object as created by \code{\link{cr_new}()}}

\item{text}{text to render}

\item{x, y}{text location}

\item{family}{font family name. Default: "sans-serif".
Use \code{systemfonts::system_fonts()$family} 
to see fonts available on the current system.  The following 
generic names are also guaranteed to work: "serif", "sans-serif", 
"cursive", "fantasy", "monospace"}

\item{size}{font size in pixels. default: 100}

\item{fill, color}{text color}

\item{weight}{"normal" (default) or "bold"}

\item{slant}{"normal" (default), "italic" or "oblique"}

\item{hjust, vjust}{justification of the text relative to the (x, y) 
location. Default: (0, 0). Use (0.5, 0.5) to center the text 
at the given (x, y) coordinates}
}
\value{
Invisibly return the original \code{cairo raster} object
}
\description{
This function displays text but does nothing in terms of font layout e.g.
it doesn't do any kerning.  This will look OK for monospaced fonts, but 
will not be great for most other fonts.
}
\examples{
\dontshow{if (interactive()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# cairo_select_font_face() within Cairo using 'fontconfig' lib may 
# not be releasing memory automatically through the glyph interface.
img <- cr_new(200, 100, 'grey80')
cr_text_basic(img, "Hello", 10, 95, size = 80, family = 'sans-serif')
plot(img, T)
\dontshow{\}) # examplesIf}
}
\seealso{
Other text functions: 
\code{\link{cr_text_glyph}()}
}
\concept{text functions}
